@import url("https://fonts.googleapis.com/css2?family=Work+Sans:ital,wght@0,100..900;1,100..900&display=swap");
@import "tailwindcss";

@property --radius {
  syntax: "<length>";
  initial-value: 0.5rem;
  inherits: true;
}

@property --primary {
  syntax: "<color>";
  initial-value: #ee2b69;
  inherits: true;
}

@property --primary-100 {
  syntax: "<color>";
  initial-value: #ffe8f0;
  inherits: true;
}

@property --secondary {
  syntax: "<color>";
  initial-value: #fbe843;
  inherits: true;
}

@property --black {
  syntax: "<color>";
  initial-value: #000000;
  inherits: true;
}

@property --black-100 {
  syntax: "<color>";
  initial-value: #333333;
  inherits: true;
}

@property --black-200 {
  syntax: "<color>";
  initial-value: #141413;
  inherits: true;
}

@property --black-300 {
  syntax: "<color>";
  initial-value: #7d8087;
  inherits: true;
}

@property --white {
  syntax: "<color>";
  initial-value: #ffffff;
  inherits: true;
}

@property --white-100 {
  syntax: "<color>";
  initial-value: #f7f7f7;
  inherits: true;
}

/* Box shadows from your config */
@property --shadow-100 {
  syntax: "<filter-function-list>";
  initial-value: 2px 2px 0px 0px rgb(0, 0, 0);
  inherits: true;
}

@property --shadow-200 {
  syntax: "<filter-function-list>";
  initial-value: 2px 2px 0px 2px rgb(0, 0, 0);
  inherits: true;
}

@property --shadow-300 {
  syntax: "<filter-function-list>";
  initial-value: 2px 2px 0px 2px #ee2b69;
  inherits: true;
}

/* Dark mode support */
:root {
  color-scheme: light;
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;
  }
}

:root[data-theme="dark"] {
  color-scheme: dark;
  /* You can override colors for dark mode here */
}

/* Define responsive breakpoints */
@custom-media --xs-and-up (min-width: 475px);
@custom-media --sm-and-up (min-width: 640px);
@custom-media --md-and-up (min-width: 768px);
@custom-media --lg-and-up (min-width: 1024px);
@custom-media --xl-and-up (min-width: 1280px);
@custom-media --2xl-and-up (min-width: 1536px);

/* Custom utilities using @utility */
@utility flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@utility text-30-extrabold {
  font-size: 30px;
  font-weight: 800;
  color: var(--white);
}

@utility text-30-bold {
  font-size: 30px;
  font-weight: 700;
  color: var(--black);
}

@utility text-30-semibold {
  font-weight: 600;
  font-size: 30px;
  color: var(--black);
}

@utility text-26-semibold {
  font-weight: 600;
  font-size: 26px;
  color: var(--black);
}

@utility text-24-black {
  font-size: 24px;
  font-weight: 900;
  color: var(--black);
}

@utility text-20-medium {
  font-weight: 500;
  font-size: 20px;
  color: var(--black);
}

@utility text-16-medium {
  font-weight: 500;
  font-size: 16px;
  color: var(--black);
}

@utility text-14-normal {
  font-weight: 400;
  font-size: 0.875rem;
  color: rgb(255 255 255 / 0.8);
}

@utility pink_container {
  width: 100%;
  background-color: var(--primary);
  min-height: 530px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  padding: 2.5rem 1.5rem;
}

@utility tag {
  background-color: var(--secondary);
  padding: 0.75rem 1.5rem;
  font-family: "Work Sans", sans-serif;
  font-weight: 700;
  border-radius: 0.125rem;
  text-transform: uppercase;
  position: relative;
}

@utility heading {
  text-transform: uppercase;
  background-color: var(--black);
  padding: 0.75rem 1.5rem;
  font-family: "Work Sans", sans-serif;
  font-weight: 800;
  color: var(--white);
  font-size: 36px;
  line-height: 46px;
  max-width: 64rem;
  text-align: center;
  margin: 1.25rem 0;
}

@media (--sm-and-up) {
  .heading {
    font-size: 54px;
    line-height: 64px;
  }
}

@utility sub-heading {
  font-weight: 500;
  font-size: 20px;
  color: var(--white);
  max-width: 42rem;
  text-align: center;
  word-break: break-word;
}

@utility section_container {
  padding: 2.5rem 1.5rem;
  max-width: 80rem;
  margin: 0 auto;
}

@utility card_grid {
  display: grid;
  gap: 1.25rem;
}

@media (--sm-and-up) {
  .card_grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (--md-and-up) {
  .card_grid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

@utility card_grid-sm {
  display: grid;
  gap: 1.25rem;
}

@media (--sm-and-up) {
  .card_grid-sm {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@utility no-result {
  color: var(--black-100);
  font-size: 0.875rem;
  font-weight: 400;
}

/* Profile utilities */
@utility profile_container {
  width: 100%;
  padding-bottom: 2.5rem;
  padding-top: 5rem;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  max-width: 80rem;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: 2.5rem;
}

@media (--lg-and-up) {
  .profile_container {
    flex-direction: row;
  }
}

@utility profile_card {
  width: 20rem;
  padding: 0 1.5rem 1.5rem;
  padding-top: 5rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: var(--primary);
  border: 5px solid var(--black);
  box-shadow: var(--shadow-100);
  border-radius: 30px;
  position: relative;
  z-index: 0;
  height: fit-content;
}

@media (max-width: 1024px) {
  .profile_card {
    width: 100%;
  }
}

@utility profile_title {
  width: 91.666667%;
  background-color: var(--white);
  border: 5px solid var(--black);
  border-radius: 20px;
  padding: 0.75rem 1.25rem;
  position: absolute;
  top: -2.25rem;
  box-shadow: var(--shadow-100);
}

.profile_title::after {
  content: "";
  position: absolute;
  top: -0.25rem;
  right: 0;
  transform: skewY(-6deg);
  background-color: var(--black);
  z-index: -1;
  border-radius: 20px;
  width: 100%;
  height: 60px;
}

.profile_title::before {
  content: "";
  position: absolute;
  bottom: -0.25rem;
  left: 0;
  transform: skewY(-6deg);
  width: 100%;
  height: 60px;
  background-color: var(--black);
  z-index: -1;
  border-radius: 20px;
}

@utility profile_image {
  border-radius: 9999px;
  object-fit: cover;
  border: 3px solid var(--black);
}

/* Idea details */
@utility divider {
  border-style: dotted;
  background-color: #a1a1aa;
  max-width: 56rem;
  margin: 2.5rem auto;
}

@utility view_skeleton {
  background-color: #a1a1aa;
  height: 2.5rem;
  width: 6rem;
  border-radius: 0.5rem;
  position: fixed;
  bottom: 0.75rem;
  right: 0.75rem;
}

/* Navbar */
@utility avatar {
  padding: 0;
  background: none;
  border-radius: 9999px;
  filter: drop-shadow(0 4px 3px rgb(0 0 0 / 0.07))
    drop-shadow(0 2px 2px rgb(0 0 0 / 0.06));
}

@utility dropdown-menu {
  width: 14rem;
  border: 5px solid var(--black);
  background-color: var(--white);
  padding: 1.25rem;
  border-radius: 1rem;
}

@utility login {
  border: 5px solid var(--black);
  padding: 1rem 0;
  background-color: var(--white);
  color: var(--black);
  position: relative;
  box-shadow: var(--shadow-100);
  font-family: "Work Sans", sans-serif;
  font-weight: 500;
  transition-property: all;
  transition-duration: 500ms;
}

.login:hover {
  box-shadow: none;
}

/* Search form */
@utility search-form {
  max-width: 48rem;
  width: 100%;
  min-height: 80px;
  background-color: var(--white);
  border: 5px solid var(--black);
  border-radius: 80px;
  font-size: 24px;
  margin-top: 2rem;
  padding: 0 1.25rem;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 1.25rem;
}

@utility search-input {
  flex: 1;
  font-weight: 700;
  width: 100%;
  height: auto;
  outline: none;
}

.search-input::placeholder {
  font-weight: 600;
  color: var(--black-100);
}

@utility search-btn {
  width: 50px;
  height: 50px;
  border-radius: 9999px;
  background-color: var(--black);
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Startup card */
@utility startup-card {
  background-color: var(--white);
  border: 5px solid var(--black);
  padding: 1.5rem 1.25rem;
  border-radius: 22px;
  box-shadow: var(--shadow-200);
  transition-property: all;
  transition-duration: 500ms;
}

.startup-card:hover {
  border-color: var(--primary);
  box-shadow: var(--shadow-300);
  background-color: var(--primary-100);
}

@utility startup-card_date {
  font-weight: 500;
  font-size: 16px;
  background-color: var(--primary-100);
  padding: 0.5rem 1rem;
  border-radius: 9999px;
}

.group:hover .startup-card_date {
  background-color: var(--white-100);
}

@utility startup-card_desc {
  font-weight: 400;
  font-size: 16px;
  line-clamp: 2;
  margin: 0.75rem 0;
  color: var(--black-100);
  word-break: break-all;
}

@utility startup-card_img {
  width: 100%;
  height: 164px;
  border-radius: 10px;
  object-fit: cover;
}

@utility startup-card_btn {
  border-radius: 9999px;
  background-color: var(--black-200);
  font-weight: 500;
  font-size: 16px;
  color: var(--white);
  padding: 0.75rem 1.25rem;
}

@utility startup-card_skeleton {
  width: 100%;
  height: 24rem;
  border-radius: 22px;
  background-color: #a1a1aa;
}

/* Startup form */
@utility startup-form {
  max-width: 42rem;
  margin: 0 auto;
  background-color: var(--white);
  margin-top: 2.5rem;
  margin-bottom: 2.5rem;
  display: flex;
  flex-direction: column;
  gap: 2rem;
  padding: 0 1.5rem;
}

@utility startup-form_label {
  font-weight: 700;
  font-size: 18px;
  color: var(--black);
  text-transform: uppercase;
}

@utility startup-form_input {
  border: 3px solid var(--black);
  padding: 1.75rem 1.25rem;
  font-size: 18px;
  color: var(--black);
  font-weight: 600;
  border-radius: 9999px;
  margin-top: 0.75rem;
}

.startup-form_input::placeholder {
  color: var(--black-300);
}

@utility startup-form_textarea {
  border: 3px solid var(--black);
  padding: 1.25rem;
  font-size: 18px;
  color: var(--black);
  font-weight: 600;
  border-radius: 20px;
  margin-top: 0.75rem;
}

.startup-form_textarea::placeholder {
  color: var(--black-300);
}

@utility startup-form_error {
  color: #ef4444;
  margin-top: 0.5rem;
  margin-left: 1.25rem;
}

@utility startup-form_editor {
  margin-top: 0.75rem;
  border: 3px solid var(--black);
  font-size: 18px;
  color: var(--black);
  font-weight: 600;
}

.startup-form_editor::placeholder {
  color: var(--black-300);
}

@utility startup-form_btn {
  background-color: var(--primary);
  border: 4px solid var(--black);
  border-radius: 9999px;
  padding: 1.25rem;
  min-height: 70px;
  width: 100%;
  font-weight: 700;
  font-size: 18px;
}

/* View */
@utility view-container {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  margin-top: 1.25rem;
  position: fixed;
  bottom: 0.75rem;
  right: 0.75rem;
}

@utility view-text {
  font-weight: 500;
  font-size: 16px;
  background-color: var(--primary-100);
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  text-transform: capitalize;
}

@utility category-tag {
  font-weight: 500;
  font-size: 16px;
  background-color: var(--primary-100);
  padding: 0.5rem 1rem;
  border-radius: 9999px;
}

/* Pattern utility */
@utility pattern {
  background-image: linear-gradient(
    to right,
    transparent 49.5%,
    rgba(251, 232, 67, 0.2) 49.5%,
    rgba(251, 232, 67, 0.6) 50.5%,
    transparent 50.5%
  );
  background-size: 5% 100%;
  background-position: center;
  background-repeat: repeat-x;
}

/* Tag triangle decoration */
@utility tag-tri {
  position: relative;
}

.tag-tri::before {
  content: "";
  position: absolute;
  top: 0.5rem;
  left: 0.5rem;
  border-top: 10px solid var(--black);
  border-right: 10px solid transparent;
}

.tag-tri::after {
  content: "";
  position: absolute;
  bottom: 0.5rem;
  right: 0.5rem;
  border-bottom: 10px solid var(--black);
  border-left: 10px solid transparent;
}

/* MDEditor */
.w-md-editor-toolbar {
  padding: 10px !important;
}

/* Create a small JS file to enable the theme toggle */
/* Save this as theme-toggle.js and include it in your layout */
/*
document.addEventListener('DOMContentLoaded', () => {
  // Check for saved theme preference or use system preference
  const savedTheme = localStorage.getItem('theme');
  const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
  
  if (savedTheme === 'dark' || (!savedTheme && systemPrefersDark)) {
    document.documentElement.setAttribute('data-theme', 'dark');
  }
  
  // Add theme toggle functionality if you have a theme toggle button
  const themeToggle = document.getElementById('theme-toggle');
  if (themeToggle) {
    themeToggle.addEventListener('click', () => {
      const currentTheme = document.documentElement.getAttribute('data-theme');
      const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
      
      document.documentElement.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
    });
  }
});
*/
